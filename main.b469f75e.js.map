{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","reject","message","nodeName","id","addEventListener","printMessage","messageDiv","document","createElement","className","textContent","body","appendChild","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GAUjB,OAAA,IAAIC,QATM,SAACC,EAASC,GACnBC,IAAAA,EAAoBJ,UAAAA,OAAAA,EACxBD,2BAAAA,OAAAA,EAAQM,SAAiBN,UAAAA,OAAAA,EAAQO,GADnC,KAGAP,EAAQQ,iBAAoBP,GAAAA,OAAAA,GAAa,WACvCE,EAAQE,OAOd,IAAMI,EAAe,SAACJ,GACdK,IAAAA,EAAaC,SAASC,cAAc,OAE1CF,EAAWG,UAAY,UACvBH,EAAWI,YAAcT,EAEzBM,SAASI,KAAKC,YAAYN,IAG5BO,OAAOC,QAAU,CACfnB,QAAAA,EACAU,aAAAA","file":"main.b469f75e.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  const resolver = (resolve, reject) => {\n    const message = `It was ${eventName} on the element: \n    ${element.nodeName}, id: ${element.id}.`;\n\n    element.addEventListener(`${eventName}`, () => {\n      resolve(message);\n    });\n  };\n\n  return new Promise(resolver);\n}\n\nconst printMessage = (message) => {\n  const messageDiv = document.createElement('div');\n\n  messageDiv.className = 'message';\n  messageDiv.textContent = message;\n\n  document.body.appendChild(messageDiv);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}